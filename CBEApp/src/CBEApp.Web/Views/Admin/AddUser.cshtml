@using System.Web.Optimization
@model CBEApp.Web.Models.Admin.UserViewModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="row pageheading">
    <h5>Cash Bash 2019 - Viva Las Vegas Bash</h5>
</div>
<div class="row pageheading">
    <h6 class="formheading">Add User</h6>
</div>
<div id="divmessage" style="height:300px; display:none" class="row pageheading"><span id="successmsg">User successfully added!</span></div>

@*<div class="col form-control-sm h-auto" id="formAddUser">*@
<form id="addUser" action="SaveUser" method="post" class="user-inputform" novalidate>
    <div class="row">
        <div class="col-1"></div>
        <div class="col-md-5">
            <div class="form-group row">
                <label class="col-xs-2 col-form-label text-danger" for="select">User ID:</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", required = "required" })
                    <div class="invalid-tooltip">Please enter User ID</div>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-xs-2 col-form-label text-danger" for="select">Password:</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(model => model.Passwordtext, new { @class = "form-control", required = "required" })
                    <div class="invalid-tooltip">Please enter Password</div>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-xs-2 col-form-label text-danger" for="select">First Name:</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", required = "required" })
                    <div class="invalid-tooltip">Please enter First Name</div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group row">
                <label class="col-xs-2 col-form-label" for="select">Inactive:</label>
                <div class="col-md-7">
                    <label class="checkbox-inline">
                        @*<input type="checkbox" value="">*@
                        @Html.CheckBoxFor(model => model.IsActive)
                    </label>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-xs-2 col-form-label text-danger" for="select">ReType Password:</label>
                <div class="col-md-7">
                    <input type="text" name="text" class="form-control" id="retypepwd" required>
                    <div class="invalid-tooltip">Please enter Password</div>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-xs-2 col-form-label text-danger" for="select">Last Name:</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", required = "required" })
                    <div class="invalid-tooltip">Please enter Last Name</div>
                </div>
            </div>
        </div>
        <div class="col-1"></div>
    </div>
    <hr>
    <div class="form-group row">
        <div class="col-3"></div>
        <label for="select" class="col-2 text-danger">Select an Event:</label>
        @*<div class="col-1"></div>*@
        <div class="col-4 pull-left">
            <select name="select" class="custom-select">
                <option>
                    Annual Incentive Trip 2019
                </option>
                <option>
                    Annual Incentive Trip 2018
                </option>
            </select>
        </div>
        <div class="col-3"></div>
    </div>


    <div class="form-group row mb-n3">
        <div class="col-4"></div>
        <p class="col-2 fill">Role</p>
        <p class="col-2 fill">Access Level</p>
        <div class="col-4"></div>
    </div>

    @for (int i = 0; i < Model.UserSecurity.Count; i++)
    {
        <div class="form-group row m-2">
            <div class="col-4"></div>
            <div class="col-2">
                <label class="checkbox-inline">
                    @*<input type="checkbox" value="">*@
                    @Html.CheckBoxFor(m => m.UserSecurity[i].IsSelected, new { @id = @Model.UserSecurity[i].RoleName, @onclick = "chkRole_Click()" })
                </label>
                @*<label for="select" style="text-align: left; margin-left: 0.1rem;">Cashier:</label>*@
                @Html.LabelFor(m => m.UserSecurity[i].IsSelected, @Model.UserSecurity[i].RoleName)
            </div>
            <div class="col-2 pull-left">
                <select name="select" class="custom-select" id="@(Model.UserSecurity[i].RoleName + "1")">
                    <option value="first">Read&Write</option>
                    <option value="seconf">Read</option>
                </select>
            </div>
            <div class="col-2"></div>
        </div>
    }


    <div>
        <span>Note: Red label signifies required input.</span>
    </div>


    <div class="form-group form-actions">
        <button name="submit" type="submit" class="btn btn-primary">Reset</button>
        <button name="submit" value="SaveUser" id="btnSubmit" type="submit" class="btn btn-primary">Save</button>
    </div>
</form>



<script>


    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var form = document.getElementById('addUser');
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        }, false);
    })();
    function Submit() {

        if (ValidationEvent()) {
            var firstname = document.getElementById("uname").value;
            var lastname = document.getElementById("luname").value;

            var spantag = document.getElementById("successmsg");
            spantag.innerHTML = firstname + " " + lastname + " successfully added !"

            document.getElementById("formAddUser").style.display = "none";
            document.getElementById("divmessage").style.display = "block";
            //document.getElementById("divmessage").classList.remove("text-hide");
            //return true;
        }
        return false;
    }

    // Below Function Executes On Form Submit
    function ValidationEvent() {
        // Storing Field Values In Variables
        var userid = document.getElementById("unameid").value;
        var pwd = document.getElementById("pwd").value;
        var retypepwd = document.getElementById("retypepwd").value;
        var firstname = document.getElementById("uname").value;
        var lastname = document.getElementById("luname").value;

        // Conditions
        if (userid != '' && pwd != '' && retypepwd != '' && firstname != '' && lastname != '') {
            //if (pwd.length > 5)
            if (pwd == retypepwd) {
                //alert("All type of validation has done on OnSubmit event.");
                return true;
            }
            else {
                alert("Invalid ReType Password!");
                return false;
            }
        } else {
            //alert("All fields are required.....!");
            return false;
        }
    }



    function chkRole_Click() {
        if (Registrar.checked == false) {
            //Registrar1.selectedIndex = 0
            Registrar1.disabled = true
            Registrar1.style.backgroundColor = '#ccc';
        }
        else if (Registrar.checked == true) {
            Registrar1.disabled = false
            //Registrar1.selectedIndex = 1
            Registrar1.style.backgroundColor = '#fff';
        }

        if (Cashier.checked == false) {
            //Cashier1.selectedIndex = 0
            Cashier1.disabled = true;
            Cashier1.style.backgroundColor = '#ccc';
        }
        else if (Cashier.checked == true) {
            Cashier1.disabled = false
            //Cashier1.selectedIndex = 1
            Cashier1.style.backgroundColor = '#fff';
        }

        if (CheckIn.checked == false) {
            //CheckIn1.selectedIndex = 0
            CheckIn1.disabled = true
            CheckIn1.style.backgroundColor = '#ccc';
        }
        else if (CheckIn.checked == true) {
            CheckIn1.disabled = false
            //CheckIn1.selectedIndex = 1
            CheckIn1.style.backgroundColor = '#fff';
        }

        if (Tabulator.checked == false) {
            //Tabulator1.selectedIndex = 0
            Tabulator1.disabled = true
            Tabulator1.style.backgroundColor = '#ccc';
        }
        else if (Tabulator.checked == true) {
            Tabulator1.disabled = false
            //Tabulator1.selectedIndex = 2
            Tabulator1.style.backgroundColor = '#fff';
        }

        if (Emcee.checked == false) {
            //Emcee1.selectedIndex = 0
            Emcee1.disabled = true
            Emcee1.style.backgroundColor = '#ccc';
        }
        else if (Emcee.checked == true) {
            Emcee1.disabled = false
            //Emcee1.selectedIndex = 1
            Emcee1.style.backgroundColor = '#fff';
        }

        if (Admin.checked == false) {
            //Admin1.selectedIndex = 0
            Admin1.disabled = true
            Admin1.style.backgroundColor = '#ccc';
        }
        else if (Admin.checked == true) {
            Admin1.disabled = false
            //Admin1.selectedIndex = 1
            Admin1.style.backgroundColor = '#fff';
        }
    }

</script>
